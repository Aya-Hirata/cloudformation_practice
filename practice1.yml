AWSTemplateFormatVersion: '2010-09-09'
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
      - Key: Name
        Value: PracticeVPC 

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: PracticeIGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PracticeRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PraivateRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
    
  Public1a:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: 10.0.10.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PracticePublicSubnet1a

  Public1c:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: 10.0.41.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PracticePublicSubnet1c

  Private1a:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: 10.0.20.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PracticePrivateSubnet1a
  
  Private1c:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: 10.0.21.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PracticePrivateSubnet1c
  
  routeTableAssocPublic1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Public1a
      RouteTableId: !Ref RouteTable
   
  routeTableAssocPublic1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Public1c
      RouteTableId: !Ref RouteTable

  routeTableAssocPrivate1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Private1a
      RouteTableId: !Ref RouteTable
  
  routeTableAssocPrivate1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Private1c
      RouteTableId: !Ref RouteTable

  route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: aws-and-infra-web
      GroupDescription: This SecurityGroup is for PracticePublicSecurityGroup
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: PracticePublicSecurityGroup

  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: aws-and-infra-db
      GroupDescription: This SecurityGroup is for PracticePrivateSecurityGroup
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:  
        - IpProtocol: tcp
          FromPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: PracticePraivateSecurityGroup

  EC2InstancePublic1a:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: awsinfrakey
      DisableApiTermination: false
      ImageId: ami-0992fc94ca0f1415a
      InstanceType: t2.micro
      Monitoring: false
      AvailabilityZone: ap-northeast-1a
      SecurityGroupIds:
        - !Ref PublicSecurityGroup
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
        sudo yum update -y
      Tags:
        - Key: Name
          Value: PracticePublic1a

  EC2InstancePublic1c:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: awsifrakey
      DisableApiTermination: false
      ImageId: ami-09d28faae2e9e7138
      InstanceType: t2.micro
      Monitoring: false
      AvailabilityZone: ap-northeast-1c
      SecurityGroupIds:
        - !Ref PublicSecurityGroup
      UserData: !Base64 
        #!/bin/bash -ex
        # put your script here
        sudo yum update -y
      Tags:
        - Key: Name
          Value: PracticePublic1c
  
  RDSDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSubnetGroupName: aws-and-infra-subnet-group
      VPCSecurityGroups: 
      - !Ref PrivateSecurityGroup
      MultiAZ: true
      DBInstanceClass: db.t2.micro
      DBName: aws-and-infra-web
      Engine: MySQL
      EngineVersion: 8.0.20
      MasterUser: root
      MasterUserPassword: g6inx79v

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: aws-and-infra-ruby
      
  ELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: aws-infra-public-alb
      Scheme: internet-facing
      SecurityGroups: 
        - aws-and-infra-web-sg-for-alb
      Subnets: 
        - !Ref Public1a
        - !Ref Public1c
      Tags:
        - Key: Name
          Value: aws-infra-public-alb
  